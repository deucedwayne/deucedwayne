import tkinter as tk  # creating a simple window
window = tk.Tk() 
window.title("TempConverter")
window.configure(bg="#d5dfed") 


# creating a grid, which will have white frames to put things inside
for i in range(7):
    window.columnconfigure(i, weight = 1, minsize = 50)
    for j in range(5):
        frame = tk.Frame(master = window, bg = "white", padx = 5, pady = 5)
        window.rowconfigure(j, weight = 1, minsize = 50)
        frame.grid(row = i, column = j,  padx = 5, pady = 5, sticky = "nsew")


# in one entry box you have to type your number...
fromTemp = tk.Entry(master = window, width = 25, justify = "right", font = "25") 
fromTemp.grid(row = 0, column = 3, columnspan = 4, rowspan = 2, sticky = "nsew", padx = 5, pady = 5)
# ...another box will show the number after convertion.
toTemp = tk.Entry(master = window, width = 25, justify = "right", font = "25") 
toTemp.grid(row = 2, column = 3, columnspan = 4, rowspan = 2, sticky = "nsew", padx = 5, pady = 5)


# giving life to a "CONVERT" button that will do all the calculations
def display():
    toTemp.delete(0, tk.END)
    global result
    global strResult
    global FloatFromTemp
    FloatFromTemp = float(fromTemp.get())
    valueDot = int(equalDot["text"])
    # from Celsius to Fahrenheit
    if (var1.get() == 1) and (var4.get() == 1):
        result = FloatFromTemp * 1.8 + 32
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Fahrenheit to Celsius
    if (var3.get() == 1) and (var2.get() == 1):
        result = (FloatFromTemp - 32) / 1.8
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Celsius to Kelvin
    if (var1.get() == 1) and (var6.get() == 1):
        result = FloatFromTemp + 273.15
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Kelvin to Celsius
    if (var5.get() == 1) and (var2.get() == 1):
        result = FloatFromTemp - 273.15
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Fahrenheit to Kelvin
    if (var3.get() == 1) and (var6.get() == 1):
        result = (FloatFromTemp + 459.67) * 5 / 9
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Kelvin to Fahrenheit
    if (var5.get() == 1) and (var4.get() == 1):
        result = FloatFromTemp * 9 / 5 - 459.67
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Celsius to Rankine
    if (var1.get() == 1) and (var8.get() == 1):
        result = FloatFromTemp * 9 / 5 + 491.67
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Rankine to Celsius
    if (var7.get() == 1) and (var2.get() == 1):
        result = (FloatFromTemp - 491.67) * 5 / 9
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Kelvin to Rankine
    if (var5.get() == 1) and (var8.get() == 1):
        result = FloatFromTemp * 1.8
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Rankine to Kelvin
    if (var8.get() == 1) and (var6.get() == 1):
        result = FloatFromTemp / 1.8
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Fahrenheit to Rankine
    if (var3.get() == 1) and (var8.get() == 1):
        result = FloatFromTemp + 459.67
        result = float(round(result, valueDot))
        strResult = str(result)
    # from Rankine to Fahrenheit
    if (var7.get() == 1) and (var4.get() == 1):
        result = FloatFromTemp - 459.67
        result = float(round(result, valueDot))
        strResult = str(result)
# in case if the same measurement in FROM and TO columns is chosen
    if (var1.get() == 1 and var2.get() == 1) or (var3.get() == 1 and var4.get() == 1) or (var5.get() == 1 and var6.get() == 1) or (var7.get() == 1 and var8.get() == 1):
        result = FloatFromTemp
        strResult = str(result)
# slight addition to the result after convertion, where the measurement symbol is shown
    if (var2.get() == 1):
        toTemp.insert(0, strResult + "°C")
    if (var4.get() == 1):
        toTemp.insert(0, strResult + "°F")
    if (var6.get() == 1):
        toTemp.insert(0, strResult + "°K")
    if (var8.get() == 1):
        toTemp.insert(0, strResult + "°R")
def clearAll():
    fromTemp.delete(0, tk.END)
    toTemp.delete(0, tk.END)
# this button converts the numbers entered
convertButton = tk.Button(master = window, text = "Convert!", command = display) 
convertButton.grid(row = 4, column = 3, columnspan = 2, sticky = "nsew", padx = 5, pady = 5)
# this button clears those two boxes' texts
clearButton = tk.Button(master = window, text = "Clear", command = clearAll)
clearButton.grid(row = 4, column = 5, columnspan = 2, sticky = "nsew", padx = 5, pady = 5)


# creating a counter that shows the amount of numbers after the dot...
# ... and creating a limit between 0 and 20 for numbers after the dot.
def decrease():
    valueDot = int(equalDot["text"])
    equalDot["text"] = f"{valueDot - 1}"
    if (valueDot == 1):
        minusDot.config(state = "disabled")
    elif (valueDot != 1):
        minusDot.config(state = "normal")

def increase():
    valueDot = int(equalDot["text"])
    equalDot["text"] = f"{valueDot + 1}"
    if (valueDot == 19):
        plusDot.config(state = "disabled")
    elif (valueDot != 19):
        plusDot.config(state = "normal")

# creating a label that shows the amount of numbers after the dot and buttons to regulate it
plusDot = tk.Button(master = window, text = "+", command = increase, state = "normal", bg = "#e8b6b0", font = "60")
plusDot.grid(row = 4, column = 0, sticky = "nsew", padx = 5, pady = 5)
equalDot = tk.Label(master = window, text = "0")
equalDot.grid(row = 4, column = 1, sticky = "nsew", pady = 5)
minusDot = tk.Button(master = window, text = "-", command = decrease, state = "disabled", bg = "#bae5e6", font = "60")
minusDot.grid(row = 4, column = 2, sticky = "nsew", padx = 5, pady = 5)
infoLabel = tk.Label(master = window, text = "Please define the amount of numbers after the dot above")
infoLabel.grid(row = 5, column = 0, rowspan = 2, columnspan = 3, sticky = "nsew", padx = 5, pady = 5)


# creating a couple of var's that are needed for checkbuttons
var1 = tk.IntVar()
var2 = tk.IntVar()
var3 = tk.IntVar()
var4 = tk.IntVar()
var5 = tk.IntVar()
var6 = tk.IntVar()
var7 = tk.IntVar()
var8 = tk.IntVar()
# creating buttons for FROM and TO Celsius
frCel = tk.Checkbutton(master = window, variable = var1, onvalue = 1, offvalue = 0, text = f"Celsius\n°C")
frCel.grid(row = 0, column = 0, sticky = "nsew", padx = 5, pady = 5)
toCel = tk.Checkbutton(master = window, variable = var2, onvalue = 1, offvalue = 0, text = f"Celsius\n°C")
toCel.grid(row = 0, column = 2, sticky = "nsew", padx = 5, pady = 5)
# creating buttons for FROM and TO Fahrenheit
frFar = tk.Checkbutton(master = window, variable = var3, onvalue = 1, offvalue = 0, text = f"Fahrenheit\n°F")
frFar.grid(row = 1, column = 0, sticky = "nsew", padx = 5, pady = 5)
toFar = tk.Checkbutton(master = window, variable = var4, onvalue = 1, offvalue = 0, text = f"Fahrenheit\n°F")
toFar.grid(row = 1, column = 2, sticky = "nsew", padx = 5, pady = 5)
# creating buttons for FROM and TO Kelvin
frKel = tk.Checkbutton(master = window, variable = var5, onvalue = 1, offvalue = 0, text = f"Kelvin\n°K")
frKel.grid(row = 2, column = 0, sticky = "nsew", padx = 5, pady = 5)
toKel = tk.Checkbutton(master = window, variable = var6, onvalue = 1, offvalue = 0, text = f"Kelvin\n°K")
toKel.grid(row = 2, column = 2, sticky = "nsew", padx = 5, pady = 5)
# creating buttons for FROM and TO Rankine
frRan = tk.Checkbutton(master = window, variable = var7, onvalue = 1, offvalue = 0, text = f"Rankine\n°R")
frRan.grid(row = 3, column = 0, sticky = "nsew", padx = 5, pady = 5)
toRan = tk.Checkbutton(master = window, variable = var8, onvalue = 1, offvalue = 0, text = f"Rankine\n°R")
toRan.grid(row = 3, column = 2, sticky = "nsew", padx = 5, pady = 5)


# some required thing so the whole thing could work
window.mainloop()
